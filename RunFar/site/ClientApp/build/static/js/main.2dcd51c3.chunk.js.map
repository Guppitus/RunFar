{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","key","value","setState","react_default","a","createElement","reactstrap_es","className","light","tag","Link","to","onClick","isOpen","navbar","Component","displayName","name","Layout","apply","arguments","NavMenu_NavMenu","children","Home","href","FetchData","forecasts","loading","runner","populateWeatherData","contents","renderForecastsTable","id","_getRunnerData","asyncToGenerator","regenerator_default","mark","_callee","_this2","wrap","_context","prev","next","fetch","then","res","json","result","stop","_populateWeatherData","_callee2","response","data","_context2","sent","aria-labelledby","map","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","decrementCounter","aria-live","App","Layout_Layout","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mSAKaA,SAAb,SAAAC,GAGE,SAAAD,EAAaE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAClBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKU,MAAQ,CACXC,WAAW,GALKX,EAHtB,OAAAC,OAAAW,EAAA,EAAAX,CAAAJ,EAAAC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAJ,EAAA,EAAAiB,IAAA,eAAAC,MAAA,WAaIZ,KAAKa,SAAS,CACZL,WAAYR,KAAKO,MAAMC,cAd7B,CAAAG,IAAA,SAAAC,MAAA,WAmBI,OACEE,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,UAAU,+EAA+EC,OAAK,GACpGL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaG,IAAKC,IAAMC,GAAG,KAA3B,UACAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeM,QAASvB,KAAKI,aAAcc,UAAU,SACrDJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,uCAAuCM,QAASxB,KAAKO,MAAMC,UAAWiB,QAAM,GAC9FX,EAAAC,EAAAC,cAAA,MAAIE,UAAU,wBACZJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASG,IAAKC,IAAMH,UAAU,YAAYI,GAAG,KAA7C,SAEFR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASG,IAAKC,IAAMH,UAAU,YAAYI,GAAG,YAA7C,YAEFR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASG,IAAKC,IAAMH,UAAU,YAAYI,GAAG,eAA7C,wBAlClB5B,EAAA,CAA6BgC,cAAhBhC,EACJiC,YAAcjC,EAAQkC,KCFxB,IAAMC,EAAb,SAAAlC,GAAA,SAAAkC,IAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,GAAA/B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAAC,MAAA9B,KAAA+B,YAAA,OAAAjC,OAAAW,EAAA,EAAAX,CAAA+B,EAAAlC,GAAAG,OAAAY,EAAA,EAAAZ,CAAA+B,EAAA,EAAAlB,IAAA,SAAAC,MAAA,WAII,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGjB,KAAKJ,MAAMqC,eARtBJ,EAAA,CAA4BH,aAAfG,EACJF,YAAcE,EAAOD,KCHvB,IAAMM,EAAb,SAAAvC,GAAA,SAAAuC,IAAA,OAAApC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAApC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAAJ,MAAA9B,KAAA+B,YAAA,OAAAjC,OAAAW,EAAA,EAAAX,CAAAoC,EAAAvC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAoC,EAAA,EAAAvB,IAAA,SAAAC,MAAA,WAII,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,wBAAR,gBAAJ,QAAwDrB,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,0DAAR,MAAxD,wCACArB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,qCAAR,SAAJ,yBACArB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,4BAAR,aAAJ,4BAEFrB,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wCAAJ,wBAAgEF,EAAAC,EAAAC,cAAA,qBAAhE,SAAsFF,EAAAC,EAAAC,cAAA,kBAAtF,oBACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gDAAJ,sDAAsGF,EAAAC,EAAAC,cAAA,gCAAtG,yJACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,6CAAJ,0EAAuHF,EAAAC,EAAAC,cAAA,8BAAvH,4EAEFF,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,yBAAP,8DAAwFF,EAAAC,EAAAC,cAAA,gCAAxF,0EAA4LF,EAAAC,EAAAC,cAAA,mBAA5L,qBAA8NF,EAAAC,EAAAC,cAAA,wBAA9N,OAAuPF,EAAAC,EAAAC,cAAA,2BAAvP,UAnBRkB,EAAA,CAA0BR,aAAbQ,EACJP,YAAcO,EAAKN,kCCDfQ,EAAb,SAAAzC,GAGE,SAAAyC,EAAYxC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACjBvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KACDW,MAAQ,CAAE8B,UAAW,GAAIC,SAAS,EAAMC,OAAO,IAFnC1C,EAHrB,OAAAC,OAAAW,EAAA,EAAAX,CAAAsC,EAAAzC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAsC,EAAA,EAAAzB,IAAA,oBAAAC,MAAA,WASIZ,KAAKwC,wBATT,CAAA7B,IAAA,SAAAC,MAAA,WAsCI,IAAI6B,EAAWzC,KAAKO,MAAM+B,QACtBxB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACHoB,EAAUM,qBAAqB1C,KAAKO,MAAM8B,WAE9C,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,cAAP,oBACA7B,EAAAC,EAAAC,cAAA,uEACCyB,KA9CT,CAAA9B,IAAA,gBAAAC,MAAA,eAAAgC,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAAgD,EAAA/B,EAAAgC,KAAA,SAAAC,IAAA,IAAAC,EAAAjD,KAAA,OAAA8C,EAAA/B,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAoDQC,MAAM,IACDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACHT,EAAKpC,SAAS,CAAE0B,OAAQmB,EAAOnB,WAvD/C,wBAAAY,EAAAQ,SAAAX,MAAA,yBAAAJ,EAAAd,MAAA9B,KAAA+B,YAAA,KAAApB,IAAA,sBAAAC,MAAA,eAAAgD,EAAA9D,OAAA+C,EAAA,EAAA/C,CAAAgD,EAAA/B,EAAAgC,KAAA,SAAAc,IAAA,IAAAC,EAAAC,EAAA,OAAAjB,EAAA/B,EAAAmC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EA4D2BC,MAAM,mBA5DjC,cA4DUQ,EA5DVE,EAAAC,KAAAD,EAAAX,KAAA,EA6DuBS,EAASL,OA7DhC,OA6DUM,EA7DVC,EAAAC,KA8DIjE,KAAKa,SAAS,CAAEwB,UAAW0B,EAAMzB,SAAS,IA9D9C,wBAAA0B,EAAAL,SAAAE,EAAA7D,SAAA,yBAAA4D,EAAA9B,MAAA9B,KAAA+B,YAAA,OAAApB,IAAA,uBAAAC,MAAA,SAY8ByB,GACxB,OACAvB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,sBAAsBgD,kBAAgB,cACrDpD,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,aACGqB,EAAU8B,IAAI,SAAAC,GAAQ,OACrBtD,EAAAC,EAAAC,cAAA,MAAIL,IAAKyD,EAASC,MAChBvD,EAAAC,EAAAC,cAAA,UAAKoD,EAASC,MACdvD,EAAAC,EAAAC,cAAA,UAAKoD,EAASE,cACdxD,EAAAC,EAAAC,cAAA,UAAKoD,EAASG,cACdzD,EAAAC,EAAAC,cAAA,UAAKoD,EAASI,kBA7B5BpC,EAAA,CAA+BV,aAAlBU,EACJT,YAAcS,EAAUR,KCD1B,IAAM6C,EAAb,SAAA9E,GAGE,SAAA8E,EAAY7E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,IACjB5E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2E,GAAAtE,KAAAH,KAAMJ,KACDW,MAAQ,CAAEmE,aAAc,GAC7B7E,EAAK8E,iBAAmB9E,EAAK8E,iBAAiBtE,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAK+E,iBAAmB/E,EAAK+E,iBAAiBvE,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJPA,EAHrB,OAAAC,OAAAW,EAAA,EAAAX,CAAA2E,EAAA9E,GAAAG,OAAAY,EAAA,EAAAZ,CAAA2E,EAAA,EAAA9D,IAAA,mBAAAC,MAAA,WAWIZ,KAAKa,SAAS,CACZ6D,aAAc1E,KAAKO,MAAMmE,aAAe,MAZ9C,CAAA/D,IAAA,mBAAAC,MAAA,WAiBMZ,KAAKa,SAAS,CACV6D,aAAc1E,KAAKO,MAAMmE,aAAe,MAlBlD,CAAA/D,IAAA,SAAAC,MAAA,WAuBI,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,2DAEAF,EAAAC,EAAAC,cAAA,KAAG6D,YAAU,UAAb,kBAAqC/D,EAAAC,EAAAC,cAAA,cAAShB,KAAKO,MAAMmE,eAErD5D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBK,QAASvB,KAAK2E,kBAAlD,aACA7D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,wBAAwBK,QAASvB,KAAK4E,kBAAxD,kBAhCZH,EAAA,CAA6B/C,aAAhB+C,EACJ9C,YAAc8C,EAAQ7C,eCMVkD,mLAIjB,OACEhE,EAAAC,EAAAC,cAAC+D,EAAD,KACEjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjCpB,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWV,IAClC3D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAW/C,YARZV,aAAZoD,EACZnD,YAAcmD,EAAIlD,KCA3B,IAAMwD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BJ,SAASC,EAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTpC,KAAK,SAAAwC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1F,QACfqF,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KC/DjE,IAAMC,EAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,EAAcH,SAASI,eAAe,QAE5CC,IAASC,OACPlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAeC,SAAUT,GACvB3F,EAAAC,EAAAC,cAACmG,EAAD,OAEFN,GDMa,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,GAAwB/B,OAAOC,UAC3C+B,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAA6B,OAAMH,GAAN,sBAEPjC,EAwCV,SAAkCO,GAEhCrC,MAAMqC,GACHpC,KAAK,SAAAO,GAGkB,MAApBA,EAAS2D,SACuD,IAAhE3D,EAAS4D,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7ChC,UAAUC,cAAcgC,MAAMtE,KAAK,SAAAwC,GACjCA,EAAa+B,aAAavE,KAAK,WAC7B+B,OAAOC,SAASwC,aAKpBrC,EAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEA5DA0B,CAAwBrC,GAGxBD,EAAgBC,MCvBxBsC","file":"static/js/main.2dcd51c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">RunFar</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true, runner:[] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n      return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n    async getRunnerData() {\r\n        fetch(\"\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.setState({ runner: result.runner });\r\n            });\r\n    }\r\n  \r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n    this.decrementCounter = this.decrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n    }\r\n\r\n  decrementCounter() {\r\n      this.setState({\r\n          currentCount: this.state.currentCount - 1\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n            <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n            <button className=\"btn btn-primary space\" onClick={this.decrementCounter}>Decrement</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}